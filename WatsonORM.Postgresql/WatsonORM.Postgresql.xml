<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WatsonORM.Postgresql</name>
    </assembly>
    <members>
        <member name="T:Watson.ORM.Postgresql.WatsonORM">
            <summary>
            WatsonORM for PostgreSQL, a lightweight and easy to use object-relational mapper (ORM).
            </summary>
        </member>
        <member name="P:Watson.ORM.Postgresql.WatsonORM.Settings">
            <summary>
            Database settings.
            </summary>
        </member>
        <member name="P:Watson.ORM.Postgresql.WatsonORM.Logger">
            <summary>
            Method to invoke when sending log messages.
            </summary>
        </member>
        <member name="P:Watson.ORM.Postgresql.WatsonORM.Debug">
            <summary>
            Debug settings.
            </summary>
        </member>
        <member name="P:Watson.ORM.Postgresql.WatsonORM.Database">
            <summary>
            Direct access to the underlying database client.
            </summary>
        </member>
        <member name="P:Watson.ORM.Postgresql.WatsonORM.IsInitialized">
            <summary>
            Indicates if the database has been initialized.
            </summary>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.#ctor(Watson.ORM.Core.DatabaseSettings)">
            <summary>
            Instantiate the object.  Once constructed, call InitializeDatabase() and InitializeTable() for each table if needed.
            </summary>
            <param name="settings">Database settings.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Dispose">
            <summary>
            Dispose of the object and release background workers.
            </summary>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.InitializeDatabase">
            <summary>
            Initialize the database client.
            If the client is already initialized, it will first be disposed.
            </summary>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.InitializeTable(System.Type)">
            <summary>
            Create table (if it doesn't exist) for a given class.
            Adding a table that has already been added will throw an ArgumentException.
            </summary>
            <param name="t">Class for which a table should be created.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.DropTable(System.Type)">
            <summary>
            Drop table if it exists for a given class.
            </summary>
            <param name="t">Class for which a table should be dropped.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.TruncateTable(System.Type)">
            <summary>
            Truncate table if it exists for a given class.
            </summary>
            <param name="t">Class for which a table should be dropped.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Insert``1(``0)">
            <summary>
            INSERT an object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="obj">Object to INSERT.</param>
            <returns>INSERTed object.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.InsertMany``1(System.Collections.Generic.List{``0})">
            <summary>
            INSERT multiple records.
            This operation will iteratively call Insert on each individual object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="objs">List of objects.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.InsertMultiple``1(System.Collections.Generic.List{``0})">
            <summary>
            INSERT multiple records.
            This operation performs the INSERT using a single database query, and does not return a list of inserted objects.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="objs">List of objects.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Update``1(``0)">
            <summary>
            UPDATE an object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="obj">Object to UPDATE.</param>
            <returns>UPDATEd object.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.UpdateMany``1(Watson.ORM.Core.DbExpression,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            UPDATE multiple rows.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="expr">Expression.</param>
            <param name="updateVals">Update values.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Delete``1(``0)">
            <summary>
            DELETE an object.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="obj">Object to DELETE.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.DeleteByPrimaryKey``1(System.Object)">
            <summary>
            DELETE an object by its primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="id">Id value.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.DeleteMany``1(Watson.ORM.Core.DbExpression)">
            <summary>
            DELETE objects by an Expression..
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="expr">Expression.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.SelectByPrimaryKey``1(System.Object)">
            <summary>
            SELECT an object by id.
            This operation will return null if the object does not exist.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="id">Id.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.SelectFirst``1(Watson.ORM.Core.DbExpression)">
            <summary>
            SELECT the first instance of an object matching a given expression.
            This operation will return null if the object does not exist.
            The ordering used in the underlying query is ascending based on primary key column.
            </summary>
            <typeparam name="T">Type of filter.</typeparam>
            <param name="expr">Expression by which SELECT should be filtered (i.e. WHERE clause).</param> 
            <returns>Object.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.SelectMany``1(Watson.ORM.Core.DbExpression)">
            <summary>
            SELECT multiple rows.
            This operation will return an empty list if no matching objects are found.
            The ordering used in the underlying query is ascending based on primary key column.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="expr">Expression.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.SelectMany``1(System.Nullable{System.Int32},System.Nullable{System.Int32},Watson.ORM.Core.DbExpression)">
            <summary>
            SELECT multiple rows with pagination.
            This operation will return an empty list if no matching objects are found.
            The ordering used in the underlying query is ascending based on primary key column.
            </summary> 
            <param name="indexStart">Index start.</param>
            <param name="maxResults">Maximum number of results to retrieve.</param> 
            <param name="expr">Filter to apply when SELECTing rows (i.e. WHERE clause).</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.SelectMany``1(System.Nullable{System.Int32},System.Nullable{System.Int32},Watson.ORM.Core.DbExpression,Watson.ORM.Core.DbResultOrder[])">
            <summary>
            SELECT multiple rows with pagination.
            This operation will return an empty list if no matching objects are found. 
            </summary> 
            <param name="indexStart">Index start.</param>
            <param name="maxResults">Maximum number of results to retrieve.</param> 
            <param name="expr">Filter to apply when SELECTing rows (i.e. WHERE clause).</param>
            <param name="resultOrder">Specify on which columns and in which direction results should be ordered.</param>
            <returns>List of objects.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.GetTableName(System.Type)">
            <summary>
            Retrieve the table name for a given type.
            </summary>
            <param name="type">Type.</param>
            <returns>Table name.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.GetColumnName``1(System.String)">
            <summary>
            Retrieve the column name for a given property.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="propName">Property name.</param>
            <returns>Column name.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Exists``1(Watson.ORM.Core.DbExpression)">
            <summary>
            Check if objects of a given type exist that match the supplied expression.
            </summary> 
            <typeparam name="T">Type.</typeparam>
            <param name="expr">Expression.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Count``1(Watson.ORM.Core.DbExpression)">
            <summary>
            Determine the number of objects of a given type that exist that match the supplied expression.
            </summary> 
            <typeparam name="T">Type.</typeparam>
            <param name="expr">Expression.</param>
            <returns>Number of matching records.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Sum``1(System.String,Watson.ORM.Core.DbExpression)">
            <summary>
            Add the contents of the specified column from objects that match the supplied expression.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="columnName"></param>
            <param name="expr">Expression.</param>
            <returns></returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Query(System.String)">
            <summary>
            Execute a query directly against the database.
            </summary>
            <param name="query">Query.</param>
            <returns>DataTable.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Timestamp(System.DateTime)">
            <summary>
            Retrieve a timestamp formatted for the database.
            </summary>
            <param name="dt">DateTime.</param>
            <returns>Formatted DateTime string.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.TimestampOffset(System.DateTimeOffset)">
            <summary>
            Retrieve a timestamp with offset formatted for the database.
            </summary>
            <param name="dt">DateTimeOffset.</param>
            <returns>Formatted DateTime string.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Sanitize(System.String)">
            <summary>
            Returns a sanitized string useful in a raw query.
            If null is supplied, null is returned.
            </summary>
            <param name="str">String.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.Dispose(System.Boolean)">
            <summary>
            Dispose of the object and release background workers.
            </summary>
            <param name="disposing">Indicate if child resources should be disposed.</param>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.DataTableToObjectList``1(System.Data.DataTable)">
            <summary>
            Convert a DataTable to an object list for initialized tables and types.  
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="table">DataTable.</param>
            <returns>List of the specified type.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.DataTableToObject``1(System.Data.DataTable)">
            <summary>
            Convert a DataTable to an object for an initialized table and type.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="table">DataTable.</param>
            <returns>Object of the specified type.</returns>
        </member>
        <member name="M:Watson.ORM.Postgresql.WatsonORM.DataRowToObject``1(System.Data.DataRow)">
            <summary>
            Convert a DataRow to an object for an initialized table and type.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="row">DataRow.</param>
            <returns>Object of the specified type.</returns>
        </member>
    </members>
</doc>
